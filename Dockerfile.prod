# syntax=docker/dockerfile:1.6
# Produção (Coolify) — sem apt-get, robusto p/ symlink

FROM --platform=linux/amd64 python:3.11-slim

ENV SERVICE_NAME=svc-face-recon \
    ENVIRONMENT=production \
    INSIGHTFACE_HOME=/models \
    HF_HOME=/models \
    ORT_DISABLE_CUDA=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    UVICORN_WORKERS=2 \
    OMP_NUM_THREADS=1 \
    MKL_NUM_THREADS=1 \
    OPENBLAS_NUM_THREADS=1

WORKDIR /app

# cache de modelos + symlink robusto para ~/.insightface
RUN set -eux; \
    mkdir -p /models; \
    if [ -L /root/.insightface ] || [ -d /root/.insightface ] || [ -f /root/.insightface ]; then \
        rm -rf /root/.insightface; \
    fi; \
    ln -s /models /root/.insightface

# Somente wheels Python (sem apt-get)
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Pré-download dos modelos (CPU)
RUN python - <<'PY'
import os
os.environ["INSIGHTFACE_HOME"]="/models"
os.environ["ORT_DISABLE_CUDA"]="1"
from insightface.app import FaceAnalysis
app = FaceAnalysis(name="buffalo_l", allowed_modules=["detection","recognition"])
app.prepare(ctx_id=-1, det_size=(640,640))
print("Modelos baixados para:", os.environ["INSIGHTFACE_HOME"])
PY

# Código
COPY app ./app
COPY .env.example ./.env

EXPOSE 8000
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]