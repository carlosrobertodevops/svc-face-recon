# syntax=docker/dockerfile:1.6
# Produção (Coolify) — sem apt-get e sem symlink

FROM --platform=linux/amd64 python:3.11-slim

ENV SERVICE_NAME=svc-face-recon \
    ENVIRONMENT=production \
    # use o diretório padrão do insightface diretamente (nada de symlink)
    INSIGHTFACE_HOME=/root/.insightface \
    HF_HOME=/models \
    ORT_DISABLE_CUDA=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    UVICORN_WORKERS=2 \
    OMP_NUM_THREADS=1 \
    MKL_NUM_THREADS=1 \
    OPENBLAS_NUM_THREADS=1

WORKDIR /app

# Cria os diretórios de cache (sem symlink!)
RUN mkdir -p /root/.insightface /models

# Somente wheels Python (evita erros de apt-get no builder do Coolify)
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Pré-download dos modelos (CPU)
RUN python - <<'PY'
import os
os.environ["INSIGHTFACE_HOME"]=os.environ.get("INSIGHTFACE_HOME","/root/.insightface")
os.environ["ORT_DISABLE_CUDA"]="1"
from insightface.app import FaceAnalysis
app = FaceAnalysis(name="buffalo_l", allowed_modules=["detection","recognition"])
app.prepare(ctx_id=-1, det_size=(640,640))
print("Modelos em:", os.environ["INSIGHTFACE_HOME"])
PY

# Código
COPY app ./app
COPY .env.example ./.env

EXPOSE 8000
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]