# syntax=docker/dockerfile:1.6
# svc-face-recon/Dockerfile.prod — Coolify (robusto)

FROM python:3.11-slim

ENV SERVICE_NAME=svc-face-recon \
    INSIGHTFACE_HOME=/tmp/insightface \
    HF_HOME=/tmp/insightface \
    ORT_DISABLE_CUDA=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PIP_DEFAULT_TIMEOUT=300 \
    PIP_RETRIES=5

WORKDIR /app

# SO deps completas (incluindo git e build-essential)
RUN set -eux; \
    printf 'Acquire::Retries "5";\nAcquire::http::No-Cache "true";\nAcquire::ForceIPv4 "true";\n' > /etc/apt/apt.conf.d/99ci; \
    apt-get update; \
    apt-get install -y --no-install-recommends \
        ca-certificates curl git build-essential \
        libgl1 libglib2.0-0 libstdc++6 libgomp1 pkg-config; \
    apt-get clean; \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Upgrade pip e instala dependências de build
RUN python -m pip install --upgrade pip setuptools wheel

# Copia requirements primeiro
COPY requirements.txt .

# Tenta instalar com fallbacks
RUN python -m pip install --no-cache-dir --timeout=120 -r requirements.txt || \
    (echo "Primeira tentativa falhou, tentando com retry..." && \
     python -m pip install --no-cache-dir --timeout=120 -r requirements.txt)

# Cria diretório para modelos e cache
RUN mkdir -p /tmp/insightface /root/.insightface && \
    chmod -R 755 /tmp/insightface /root/.insightface

# Resto do Dockerfile mantido igual...
COPY app ./app
COPY .env.example ./.env

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD python -c "import requests; requests.get('http://localhost:8000/health', timeout=5)" || exit 1

EXPOSE 8000

CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
