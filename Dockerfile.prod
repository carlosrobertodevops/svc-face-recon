# syntax=docker/dockerfile:1.6
# svc-face-recon/Dockerfile.prod — compatível com Coolify (sem mkdir no build)

FROM python:3.11-slim

# Tudo que precisa ser gravável durante o build vai para /tmp (sempre disponível)
ENV SERVICE_NAME=svc-face-recon \
    INSIGHTFACE_HOME=/tmp/insightface \
    HF_HOME=/tmp/insightface \
    ORT_DISABLE_CUDA=1 \
    PYTHONUNBUFFERED=1 \
    UVICORN_WORKERS=2 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

WORKDIR /app

# Instala 100% via wheels (sem apt-get)
COPY requirements.txt .
RUN python -m pip install --upgrade pip==24.2 setuptools==70.0.0 wheel==0.44.0 && \
    pip install --prefer-binary numpy==2.1.2 onnxruntime==1.19.2 pillow==10.4.0 opencv-python-headless==4.10.0.84 && \
    pip install --prefer-binary -r requirements.txt

# (Opcional) pré-download — se falhar por rede, não quebra a imagem
RUN python - <<'PY'
import os, sys
os.environ["INSIGHTFACE_HOME"]="/tmp/insightface"
os.environ["ORT_DISABLE_CUDA"]="1"
try:
    from insightface.app import FaceAnalysis
    app = FaceAnalysis(name="buffalo_l", allowed_modules=["detection","recognition"])
    app.prepare(ctx_id=-1, det_size=(640,640))
    print("Modelos prontos em", os.environ["INSIGHTFACE_HOME"])
except Exception as e:
    print("WARN: pre-download ignorado:", e, file=sys.stderr)
PY

# Código da app
COPY app ./app
COPY .env.example ./.env

EXPOSE 8000
CMD ["uvicorn","app.main:app","--host","0.0.0.0","--port","8000"]