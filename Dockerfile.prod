# Estágio 1: Builder (faz o trabalho pesado)
FROM python:3.11-slim as builder

WORKDIR /app

# Instala apenas dependências de sistema essenciais
RUN apt-get update && apt-get install -y --no-install-recommends \
    libgl1 libglib2.0-0 libstdc++6 libgomp1 \
    && rm -rf /var/lib/apt/lists/*

# Copia requirements primeiro para aproveitar cache do Docker
COPY requirements.txt .

# Tenta instalar cada pacote individualmente
RUN cat requirements.txt | while read package; do \
    echo "=== INSTALANDO: $package ===" && \
    pip install --no-cache-dir "$package" || \
    (echo "=== FALHA EM: $package ===" && exit 1); \
    done


# Estágio 2: Runtime (imagem final leve)
FROM python:3.11-slim

ENV SERVICE_NAME=svc-face-recon
ENV INSIGHTFACE_HOME=/models
ENV HF_HOME=/models
ENV PYTHONPATH=/app
ENV PATH=/root/.local/bin:$PATH

# Instala apenas runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    libgl1 libglib2.0-0 libstdc++6 libgomp1 \
    && rm -rf /var/lib/apt/lists/* \
    && mkdir -p /models

WORKDIR /app

# Copia dependências instaladas do estágio builder
COPY --from=builder /root/.local /root/.local

# Copia código da aplicação
COPY app ./app
COPY .env.example ./.env

EXPOSE 8000

# Comando de inicialização (modelos serão baixados no runtime)
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "1"]
