# syntax=docker/dockerfile:1.6
# svc-face-recon/Dockerfile.prod — Produção (Coolify)

FROM python:3.11-slim

ENV SERVICE_NAME=svc-face-recon \
    ENVIRONMENT=production \
    INSIGHTFACE_HOME=/models \
    HF_HOME=/models \
    ORT_DISABLE_CUDA=1 \
    DEBIAN_FRONTEND=noninteractive \
    OMP_NUM_THREADS=1 \
    MKL_NUM_THREADS=1 \
    OPENBLAS_NUM_THREADS=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    UVICORN_WORKERS=2

WORKDIR /app

# --- APT mais resiliente em CI (Coolify) ---
# - força IPv4 (evita mirrors que só respondem IPv6)
# - aumenta retries e desabilita pipeline
RUN set -eux; \
    printf 'Acquire::Retries "5";\nAcquire::http::No-Cache "true";\nAcquire::http::Pipeline-Depth "0";\nAcquire::ForceIPv4 "true";\n' > /etc/apt/apt.conf.d/99coolify-ci; \
    sed -i 's|http://deb.debian.org|https://deb.debian.org|g' /etc/apt/sources.list; \
    apt-get update -y; \
    apt-get install -y --no-install-recommends ca-certificates apt-transport-https gnupg dirmngr; \
    apt-get install -y --no-install-recommends libgl1 libglib2.0-0 libstdc++6 libgomp1 build-essential curl; \
    rm -rf /var/lib/apt/lists/*

# Cache de modelos + symlink
RUN mkdir -p /models && if [ ! -e /root/.insightface ]; then ln -s /models /root/.insightface; fi

# Dependências Python
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Pré-download de modelos (CPU)
RUN python - <<'PY'
import os
os.environ["INSIGHTFACE_HOME"]="/models"
os.environ["ORT_DISABLE_CUDA"]="1"
from insightface.app import FaceAnalysis
app = FaceAnalysis(name="buffalo_l", allowed_modules=["detection","recognition"])
app.prepare(ctx_id=-1, det_size=(640,640))
print("Modelos baixados para:", os.environ["INSIGHTFACE_HOME"])
PY

# Código
COPY app ./app
COPY .env.example ./.env

EXPOSE 8000
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]