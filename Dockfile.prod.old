# svc-face-recon/Dockerfile
FROM python:3.11-slim

ENV SERVICE_NAME=svc-face-recon
# cache de modelos no volume
ENV INSIGHTFACE_HOME=/models
ENV HF_HOME=/models

# Dependências nativas (Debian 13/Trixie → libgl1)
RUN apt-get update && apt-get install -y --no-install-recommends \
  libgl1 libglib2.0-0 libstdc++6 libgomp1 build-essential curl \
  && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Garante diretório de cache e um symlink fallback para ~/.insightface
RUN mkdir -p /models

#&& \
#  if [ ! -e /root/.insightface ]; then ln -s /models /root/.insightface; fi

WORKDIR /app
COPY requirements.txt .

# Tenta instalar cada pacote individualmente
RUN cat requirements.txt | while read package; do \
    echo "=== INSTALANDO: $package ===" && \
    pip install --no-cache-dir "$package" || \
    (echo "=== FALHA EM: $package ===" && exit 1); \
    done

# **CORREÇÃO: Remove o download de modelos durante o build**
# Os modelos serão baixados automaticamente no primeiro uso
RUN echo "Modelos serão baixados no primeiro uso da aplicação" && \
    mkdir -p /models

COPY app ./app
COPY .env ./.env

EXPOSE 8000
ENV UVICORN_WORKERS=1

CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

# syntax=docker/dockerfile:1.6
# svc-face-recon/Dockerfile.prod - Coolify (Solução Gateway Timeout)
